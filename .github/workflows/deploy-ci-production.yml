name: Deploy Production Environment
on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
jobs:
  publish:
    environment: production
    name: Build and push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker build
        run: |
          docker build . -t ${{ vars.DOCKER_IMAGE_NAME }}
      - name: Docker tag
        run: docker tag ${{ vars.DOCKER_IMAGE_NAME }}:latest ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest
      - name: Docker push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest
      
  deploy:
    needs: publish
    environment: production
    runs-on: sh-05_gateway
    steps:
      - name: Docker pull
        run: |
          sudo docker pull mirror.ccs.tencentyun.com/${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest
      - name: Deploy with docker run
        run: |
          sudo docker stop ${{ vars.DOCKER_CONTAINER_NAME }} || true
          sudo docker rm ${{ vars.DOCKER_CONTAINER_NAME }} || true
          sudo docker run -d --name ${{ vars.DOCKER_CONTAINER_NAME }} \
            -p ${{ vars.DOCKER_CONTAINER_PORT }}:8080 \
            -e MYSQL_HOST=${{ secrets.ENV_MYSQL_HOST }} \
            -e MYSQL_USER=${{ secrets.ENV_MYSQL_USER }} \
            -e MYSQL_PASSWORD=${{ secrets.ENV_MYSQL_PASSWORD }} \
            -e MYSQL_DATABASE=${{ secrets.ENV_MYSQL_DATABASE }} \
            -e REDIS_HOST=${{ secrets.ENV_REDIS_HOST }} \
            -e REDIS_PORT=${{ secrets.ENV_REDIS_PORT }} \
            -e REDIS_DB=${{ secrets.ENV_REDIS_DB }} \
            -e TOKEN=${{ secrets.ENV_TOKEN }} \
            -e XNXQDM=${{ vars.ENV_XNXQ }} \
            -e PAGE_SIZE=${{ vars.ENV_PAGE_SIZE }} \
            -e COOKIE=${{ secrets.ENV_COOKIE }} \
            -e JWXT_DOMAIN=${{ secrets.ENV_JWXT_DOMAIN }} \
            mirror.ccs.tencentyun.com/${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:latest
      - name: Docker image prune
        run: |
          docker image prune -a -f